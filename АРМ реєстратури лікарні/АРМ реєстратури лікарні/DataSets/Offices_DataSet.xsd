<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Offices_DataSet" targetNamespace="http://tempuri.org/Offices_DataSet.xsd" xmlns:mstns="http://tempuri.org/Offices_DataSet.xsd" xmlns="http://tempuri.org/Offices_DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="registryDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="registryDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.АРМ_реєстратури_лікарні.Properties.Settings.GlobalReference.Default.registryDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OfficesTableAdapter" GeneratorDataComponentClassName="OfficesTableAdapter" Name="Offices" UserDataComponentName="OfficesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="registryDBConnectionString (Settings)" DbObjectName="registryDB.dbo.Offices" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Offices] WHERE (([ID_Office] = @Original_ID_Office) AND ((@IsNull_Office = 1 AND [Office] IS NULL) OR ([Office] = @Original_Office)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ID_Office" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID_Office" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Office" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Office" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Office" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Office" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Offices] ([ID_Office], [Office]) VALUES (@ID_Office, @Office);
SELECT ID_Office, Office FROM Offices WHERE (ID_Office = @ID_Office)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ID_Office" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID_Office" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Office" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Office" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Office, Office FROM dbo.Offices</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Offices] SET [ID_Office] = @ID_Office, [Office] = @Office WHERE (([ID_Office] = @Original_ID_Office) AND ((@IsNull_Office = 1 AND [Office] IS NULL) OR ([Office] = @Original_Office)));
SELECT ID_Office, Office FROM Offices WHERE (ID_Office = @ID_Office)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ID_Office" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID_Office" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Office" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Office" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ID_Office" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID_Office" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Office" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Office" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Office" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Office" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Office" DataSetColumn="ID_Office" />
              <Mapping SourceColumn="Office" DataSetColumn="Office" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Offices_DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_UserDSName="Offices_DataSet" msprop:Generator_DataSetName="Offices_DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Offices" msprop:Generator_RowEvHandlerName="OfficesRowChangeEventHandler" msprop:Generator_RowDeletedName="OfficesRowDeleted" msprop:Generator_RowDeletingName="OfficesRowDeleting" msprop:Generator_RowEvArgName="OfficesRowChangeEvent" msprop:Generator_TablePropName="Offices" msprop:Generator_RowChangedName="OfficesRowChanged" msprop:Generator_RowChangingName="OfficesRowChanging" msprop:Generator_TableClassName="OfficesDataTable" msprop:Generator_RowClassName="OfficesRow" msprop:Generator_TableVarName="tableOffices" msprop:Generator_UserTableName="Offices">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Office" msprop:Generator_ColumnPropNameInRow="ID_Office" msprop:Generator_ColumnPropNameInTable="ID_OfficeColumn" msprop:Generator_ColumnVarNameInTable="columnID_Office" msprop:Generator_UserColumnName="ID_Office">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Office" msprop:Generator_ColumnPropNameInRow="Office" msprop:Generator_ColumnPropNameInTable="OfficeColumn" msprop:Generator_ColumnVarNameInTable="columnOffice" msprop:Generator_UserColumnName="Office" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Offices" />
      <xs:field xpath="mstns:ID_Office" />
    </xs:unique>
  </xs:element>
</xs:schema>